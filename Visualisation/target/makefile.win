#############################################################################
# Makefile for building: visualisation
# Generated by fake_qmake
# Project:  visualisation.pro
# Template: app
# Command:  fake_qmake visualisation.pro -o Makefile.win 
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_LARGEFILE_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -Wall $(DEFINES)
INCPATH       = -I"$(PVBDIR)\pvserver" -I"$(PVBDIR)\rllib\lib"
LINK          = g++
LFLAGS        = -static-libgcc -Wl,-s 
LIBS          = $(PVBDIR)/win-mingw/bin/libserverlib.a $(PVBDIR)/win-mingw/bin/librllib.a -lws2_32 -ladvapi32 -lpthread
QMAKE         = fake_qmake.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
SED           = 
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Files

SOURCES       =	main.cpp \
	mask1.cpp

OBJECTS       =	release\main.o \
	release\mask1.o

DIST           = 
QMAKE_TARGET   = visualisation
DESTDIR        = release\ #avoid trailing-slash linebreak
DESTDIR_TARGET = release\visualisation
TARGET         = visualisation.exe
DESTDIR_TARGET         = release\visualisation.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.win $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS)
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS) $(LIBS)

qmake:  FORCE
	fake_qmake visualisation.pro -o Makefile.win 

clean:
	-$(DEL_FILE) $(OBJECTS)
####### Compile

release\main.o: main.cpp pvapp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release\mask1.o: mask1.cpp pvapp.h mask1_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mask1.o mask1.cpp

